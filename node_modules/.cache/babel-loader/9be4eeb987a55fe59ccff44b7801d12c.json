{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD2fmXmOpfUWV0Eu5ZqBGk0tTfuej6e85M\",\n  authDomain: \"auth-dev-6ec23.firebaseapp.com\",\n  projectId: \"auth-dev-6ec23\",\n  storageBucket: \"auth-dev-6ec23.appspot.com\",\n  messagingSenderId: \"250884675212\",\n  appId: \"1:250884675212:web:6d37b4d5cf12fb6efdcda9\"\n};\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const logout = () => {\n  signOut(auth);\n};","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","logInWithEmailAndPassword","email","password","err","console","error","alert","message","registerWithEmailAndPassword","name","res","user","uid","authProvider","sendPasswordReset","logout"],"sources":["/Users/admin/Desktop/ledarskapsjouren/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n    GoogleAuthProvider, \n    getAuth, \n    signInWithPopup, \n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signOut} from \"firebase/auth\";\n\nimport {\n    getFirestore,\n    query,\n    getDocs,\n    collection,\n    where,\n    addDoc} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD2fmXmOpfUWV0Eu5ZqBGk0tTfuej6e85M\",\n  authDomain: \"auth-dev-6ec23.firebaseapp.com\",\n  projectId: \"auth-dev-6ec23\",\n  storageBucket: \"auth-dev-6ec23.appspot.com\",\n  messagingSenderId: \"250884675212\",\n  appId: \"1:250884675212:web:6d37b4d5cf12fb6efdcda9\"\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nconst logInWithEmailAndPassword = async (email, password) => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  export const registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const user = res.user;\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name,\n        authProvider: \"local\",\n        email,\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  export const sendPasswordReset = async (email) => {\n    try {\n      await sendPasswordResetEmail(auth, email);\n      alert(\"Password reset link sent!\");\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  export const logout = () => {\n    signOut(auth);\n  };"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACIC,kBAAkB,EAClBC,OAAO,EACPC,eAAe,EACfC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,sBAAsB,EACtBC,OAAO,QAAO,eAAe;AAEjC,SACIC,YAAY,EACZC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,KAAK,EACLC,MAAM,QAAO,oBAAoB;AAErC,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,GAAG,GAAGrB,aAAa,CAACc,cAAc,CAAC;AAChD,OAAO,MAAMQ,IAAI,GAAGpB,OAAO,CAACmB,GAAG,CAAC;AAChC,OAAO,MAAME,EAAE,GAAGf,YAAY,CAACa,GAAG,CAAC;AAEnC,MAAMG,yBAAyB,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;EACzD,IAAI;IACF,MAAMtB,0BAA0B,CAACkB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;EACzD,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMC,4BAA4B,GAAG,OAAOC,IAAI,EAAER,KAAK,EAAEC,QAAQ,KAAK;EAC3E,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAM7B,8BAA8B,CAACiB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IACvE,MAAMS,IAAI,GAAGD,GAAG,CAACC,IAAI;IACrB,MAAMtB,MAAM,CAACF,UAAU,CAACY,EAAE,EAAE,OAAO,CAAC,EAAE;MACpCa,GAAG,EAAED,IAAI,CAACC,GAAG;MACbH,IAAI;MACJI,YAAY,EAAE,OAAO;MACrBZ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAG,MAAOb,KAAK,IAAK;EAChD,IAAI;IACF,MAAMnB,sBAAsB,CAACgB,IAAI,EAAEG,KAAK,CAAC;IACzCK,KAAK,CAAC,2BAA2B,CAAC;EACpC,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,MAAM,GAAG,MAAM;EAC1BhC,OAAO,CAACe,IAAI,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module"}